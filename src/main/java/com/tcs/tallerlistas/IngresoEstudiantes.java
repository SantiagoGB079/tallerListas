/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.tcs.tallerlistas;

import com.tcs.tallerlistas.beans.Estudiante;
import com.tcs.tallerlistas.beans.Excepciones;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import static com.tcs.tallerlistas.beans.Constantes.*;


public class IngresoEstudiantes {


    public static void main(String[] args) {

        System.out.println(INGRESO);

        List<Estudiante> list = new ArrayList<>();

        try {

            list = leerArchivo(list);

            System.out.println("\nTotal de estudiantes registrados: " + list.size() + " estudiantes");

            try {
                validarEdad(6, 10, list);
            } catch (Excepciones excepciones) {
                System.out.println(CODIGO + excepciones.getCodigo());
                System.out.println(ERROR + excepciones.getError());
                System.out.println(CAUSA + excepciones.getCausa());
            }

            llenarListas(list);
            validarAprobado(list);

        } catch (Excepciones excepciones) {
            System.out.println(CODIGO + excepciones.getCodigo());
            System.out.println(CAUSA + excepciones.getCausa());
            System.out.println(ERROR + excepciones.getError());
        }
    }

    public static List<Estudiante> leerArchivo(List<Estudiante> list) throws Excepciones {

        Estudiante estudiante;
        try {
            Scanner data = new Scanner(new File(RUTA));

            while (data.hasNextLine()) {
                String[] estData = data.nextLine().split(",");
                estudiante = new Estudiante(estData[0], estData[1], estData[2], estData[3], estData[4]);
                list.add(estudiante);
            }
        } catch (FileNotFoundException e) {
            throw new Excepciones("001", "el archivo en la ruta " + e.getMessage() +
                    " no existe", " " + e.getCause());
        }
        return list;
    }

    public static void validarEdad(int edaIni, int edadFinal, List<Estudiante> list) throws Excepciones {
        int contEdad = 0;
        for (int i = 0; i < list.size(); i++) {
            try {
                if (Integer.valueOf(list.get(i).getEdad()) >= edaIni && Integer.valueOf(list.get(i).getEdad()) <= edadFinal)
                    contEdad++;
            } catch (NumberFormatException e) {
                throw new Excepciones("002", "La edad recibida no contiene el formato numerico " + e.getMessage(), "" + e.getCause());
            }
        }
        System.out.println("La cantidad de estudiantes entre " + edaIni + " y " + edadFinal + " años es de: " + contEdad + " estudiantes");
    }

    public static void llenarListas(List<Estudiante> list) {

        List<Estudiante> listJardin = new ArrayList<>();
        List<Estudiante> listPrimero = new ArrayList<>();
        List<Estudiante> listSegundo = new ArrayList<>();
        List<Estudiante> listTercero = new ArrayList<>();
        List<Estudiante> listCuarto = new ArrayList<>();
        List<Estudiante> listQuinto = new ArrayList<>();

        for (int i = 0; i < list.size(); i++) {
            String var = list.get(i).getGrado().toUpperCase();
            switch (var) {

                case JARDIN:
                    listJardin.add(list.get(i));
                    break;

                case PRIMERO:
                    listPrimero.add(list.get(i));
                    break;

                case SEGUNDO:
                    listSegundo.add(list.get(i));
                    break;

                case TERCERO:
                    listTercero.add(list.get(i));
                    break;

                case CUARTO:
                    listCuarto.add(list.get(i));
                    break;

                case QUINTO:
                    listQuinto.add(list.get(i));
                    break;

                default:
                    System.out.println("Grado no valido");
            }
        }

        imprimirListas(listJardin, listPrimero, listSegundo, listTercero, listCuarto, listQuinto);
    }

    public static boolean validarTipoId(String id) {
        String subCadena = id.substring(0, 2);
        return (subCadena.equals("TI"));
    }

    public static void imprimirListas(List<Estudiante> listJardin, List<Estudiante> listPrimero, List<Estudiante> listSegundo,
                                      List<Estudiante> listTercero, List<Estudiante> listCuarto, List<Estudiante> listQuinto) {

        System.out.println("\n" + JARDIN);

        for (int i = 0; i < listJardin.size(); i++) {
            String cadena;
            cadena = listJardin.get(i).getNombre();
            if (validarTipoId(listJardin.get(i).getId()))
                cadena += " " + listJardin.get(i).getEdad() + ANO_GRADO + listJardin.get(i).getGrado();
            System.out.println(cadena);
        }

        System.out.println("\n" + PRIMERO);

        for (int i = 0; i < listPrimero.size(); i++) {
            String cadena;
            cadena = listPrimero.get(i).getNombre();
            if (validarTipoId(listPrimero.get(i).getId()))
                cadena += " " + listPrimero.get(i).getEdad() + ANO_GRADO + listPrimero.get(i).getGrado();
            System.out.println(cadena);
        }

        System.out.println("\n" + SEGUNDO);

        for (int i = 0; i < listSegundo.size(); i++) {
            String cadena;
            cadena = listSegundo.get(i).getNombre();
            if (validarTipoId(listSegundo.get(i).getId()))
                cadena += " " + listSegundo.get(i).getEdad() + ANO_GRADO + listSegundo.get(i).getGrado();
            System.out.println(cadena);
        }

        System.out.println("\n" + TERCERO);

        for (int i = 0; i < listTercero.size(); i++) {
            String cadena;
            cadena = listTercero.get(i).getNombre();
            if (validarTipoId(listTercero.get(i).getId()))
                cadena += " " + listTercero.get(i).getEdad() + ANO_GRADO + listTercero.get(i).getGrado();
            System.out.println(cadena);
        }

        System.out.println("\n" + CUARTO);

        for (int i = 0; i < listCuarto.size(); i++) {
            String cadena;
            cadena = listCuarto.get(i).getNombre();
            if (validarTipoId(listCuarto.get(i).getId()))
                cadena += " " + listCuarto.get(i).getEdad() + ANO_GRADO +
                        listCuarto.get(i).getGrado();
            System.out.println(cadena);
        }

        System.out.println("\n" + QUINTO);
        for (int i = 0; i < listQuinto.size(); i++) {
            String cadena;
            cadena = listQuinto.get(i).getNombre();
            if (validarTipoId(listQuinto.get(i).getId()))
                cadena += " " + listQuinto.get(i).getEdad() + ANO_GRADO + listQuinto.get(i).getGrado();
            System.out.println(cadena);
        }
    }

    public static void validarAprobado(List<Estudiante> list) {

        System.out.println("\nLos siguientes estudiantes deben repetir el año: \n");

        for (int i = 0; i < list.size(); i++) {

            if (list.get(i).getAprobado().equals(REPROBADO))
                System.out.println(list.get(i).getNombre());
        }
    }
}
